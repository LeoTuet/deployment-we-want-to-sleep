# nginx.conf

user nginx;
worker_processes 1;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;


events {
  worker_connections 1024;
}


http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /dev/stdout main;
  sendfile on;
  keepalive_timeout 65;

  server {
    # redirect from http to https
    listen 80;
    server_name  wewanttosleep.de;
    return 301 https://$host$request_uri;
  }

  server {

    resolver 127.0.0.11 valid=30s;

    listen              443 ssl http2;
    server_name         wewanttosleep.de;
    ssl_certificate     /etc/letsencrypt/live/wewanttosleep.de/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/wewanttosleep.de/privkey.pem;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    
    gzip on;                                                  # enable gzip compression
    gzip_types
                  text/plain
                  text/css
                  text/js
                  text/xml
                  text/javascript
                  application/javascript
                  application/json
                  application/xml
                  application/rss+xml
                  image/svg+xml;                              # enable compression for all types
    gzip_proxied    no-cache no-store private expired auth;   # don't send compressed data to caching proxies
    gzip_min_length 1000;                                     # minimal length for gzip to compress

    location ^~ /.well-known/ {
        # allow LE to validate the domain
        root   /usr/share/nginx/html;
        allow all;
    }

    location / {
        set $ui http://wwts_website:80;
        proxy_pass $ui;
    }

    location /api {
        set $api http://wwts_api:3000;
        rewrite ^/api(/.*)$ $1 break;

        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass $api;
    }
  }
}
